/** *Author:  Shane Johnson *Blog: http://blog.ultravisual.co.uk *Web: http://ultravisual.co.uk *Contact: Shanej@ultravisual.co.uk *Created:29 Nov 2009 *Updated:21 Dec 2009 * *Copyright (c) 2009 Shane Johnson *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package com.davidcaneso.utils{	public class TwitParser	{		private static var httpReg:RegExp;		private static var userNameReg:RegExp;		private static var hashReg:RegExp;		public static function parseTwit(data:String,linkColor:uint=0xFF0000):String		{			httpReg = /(http|https|ftp)([^ ]+)/ig;			userNameReg = /(^|\s)@(\w+)/g;			hashReg = /(^|\s)#(\w+)/g;			//parse for link url			var ns:Array = httpReg.exec(data);			if ((ns != null))			{				removeSpaces();				var newLc:String = linkColor.toString(16);				var httpReplacement:String = "<a target='_blank' href='" + ns[0] + "'><font color='#" + newLc + "'>" + ns[0] + "</font></a>";				data = data.replace(httpReg,httpReplacement);			}			//parse for username link			ns = userNameReg.exec(data);			if ((ns != null))			{				removeSpaces();				var userNameReplacement:String = "<a target='_blank' href='http://twitter.com/" + ns[0] + "'><font color='#" + newLc + "'>" + ns[0] + "</font></a>";				data = data.replace(userNameReg,userNameReplacement);			}			//parse for hash tag			ns = hashReg.exec(data);			if ((ns != null))			{				removeSpaces();				var hashReplacement:String = "<a target='_blank' href='http://twitter.com/#!/search/" + escape(ns[0]) + "'><font color='#" + newLc + "'>" + ns[0] + "</font></a>";				data = data.replace(hashReg,hashReplacement);			}			return data;			function removeSpaces():void			{				if (ns[0].indexOf(" ") != -1)				{					var spaceReg:RegExp = / /g;					ns[0] = String(ns[0]).replace(spaceReg,"");				}			}			return ns[0];		}	}}