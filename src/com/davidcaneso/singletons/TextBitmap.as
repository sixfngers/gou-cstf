package com.davidcaneso.singletons{	import com.davidcaneso.text.DynamicTextField;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Sprite;	import flash.errors.IllegalOperationError;	import flash.text.AntiAliasType;	import flash.text.GridFitType;	public class TextBitmap	{		private static var _instance:TextBitmap;		private static var _container:Sprite;		private static var _tf:DynamicTextField;		public static function get instance():TextBitmap		{			if (!TextBitmap._instance)				TextBitmap._instance = new TextBitmap(new PrivateClass());			return TextBitmap._instance;		}		public function TextBitmap(pvt:PrivateClass):void		{			if (pvt == null)			{				throw new IllegalOperationError("You may not instantiate this Singleton class directly. Use the static getInstance() method.");			}			else			{				_tf = new DynamicTextField(0,0);				_container = new Sprite();				_container.addChild(_tf);			}		}		public function changeAntiAlias(type:String=AntiAliasType.ADVANCED,sharpness:int=0,thickness:int=0,gridFitType:String=GridFitType.NONE):void		{			_tf.changeAntiAlias(type,sharpness,thickness,gridFitType);		}		public function createBitmap(textValue:String,formatName: * ,smoothing:Boolean,fieldWidth:int=0,fieldHeight:int=0):Bitmap		{			if ((fieldWidth > 0))			{				_tf.width = fieldWidth;			}			else			{				_tf.width = 0;			}			if ((fieldHeight > 0))			{				_tf.height = fieldHeight;			}			else			{				_tf.height = 0;			}			_tf.htmlText = textValue;			_tf.applyFormat(formatName);			var bmpData:BitmapData = new BitmapData(_tf.width,_tf.height,true,0);			bmpData.draw(_tf);			return new Bitmap(bmpData,'auto',smoothing);		}	}}//Singleton Enforcerclass PrivateClass { }