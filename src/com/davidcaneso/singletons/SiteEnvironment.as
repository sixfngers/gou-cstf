package com.davidcaneso.singletons {	import com.davidcaneso.collections.List;	import flash.errors.IllegalOperationError;	import flash.net.LocalConnection;	import flash.system.Capabilities;	public class SiteEnvironment	{		private static var _instance:SiteEnvironment;		private var _domain:String;		private var _inIDE:Boolean;		private var _environments:List;		private var _currentEnvironment:String;		private var _defaultEnvironment:String;		public static function get instance():SiteEnvironment		{			if (!SiteEnvironment._instance) SiteEnvironment._instance = new SiteEnvironment(new PrivateClass());			return SiteEnvironment._instance;		}		public function SiteEnvironment(pvt:PrivateClass):void		{			if (!pvt){				throw(new IllegalOperationError("You may not instantiate this Singleton class directly. Use the static get instance method."));			}else{				_environments = new List();								_domain = new LocalConnection().domain;				if(_domain == "localhost")				{					addEnvironment('localhost', './', true);										_inIDE = true;					if(Capabilities.playerType == "PlugIn" || Capabilities.playerType == "ActiveX") _inIDE = false;				}			}		}				public function get currentEnvironment():String		{			return _validateEnvironment();		}		public function get domain():String		{			return _domain;		}		public function get inIDE():Boolean		{			return _inIDE;		}		public function addEnvironment(identifier:String,environmentUrl:String,makeDefault:Boolean=false):void		{			if (_environments.names.length < 1 || makeDefault)			{				_defaultEnvironment = environmentUrl;			}			_environments.addToList(identifier,environmentUrl);		}		private function _validateEnvironment():String		{			var valid:String = _defaultEnvironment;			var iLimit:int = _environments.names.length;			//trace('search '+iLimit+' environments')			for (var i:int = 0; i < iLimit; i++)			{				//trace('checking '+_domain +' for '+_environments.names[i])				if (_domain.indexOf(_environments.names[i]) >= 0)				{					valid = _environments.values[i];				}			}			_currentEnvironment = valid;			return _currentEnvironment;		}	}}//Singleton Enforcerclass PrivateClass { }