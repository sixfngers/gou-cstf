package com.davidcaneso.singletons{	import flash.errors.IllegalOperationError;	public class XMLData	{		private static var _instance:XMLData;		private var _configDataCreated:Boolean = false;		private var _sitemapDataCreated:Boolean = false;		private var _config:XML;		private var _sitemap:XML;		public static function get instance():XMLData		{			if (! XMLData._instance)			{				XMLData._instance = new XMLData(new PrivateClass  );			}			return XMLData._instance;		}		public function XMLData(pvt:PrivateClass):void		{			if (! pvt)			{				throw new IllegalOperationError("You may not instantiate this XMLData class directly.  Use the static getter XMLData.instance instead");			}		}		public function set config(data:XML):void		{			if (! _configDataCreated)			{				_configDataCreated = true;				_config = data;			}		}		public function get config():XML		{			return _config;		}		public function set sitemap(data:XML):void		{			if (! _sitemapDataCreated)			{				_sitemapDataCreated = true;				_sitemap = data;			}		}		public function get sitemap():XML		{			return _sitemap;		}	}}//Singleton Enforcerclass PrivateClass {}