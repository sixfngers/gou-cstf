package com.davidcaneso.singletons.tracking.google{    import com.davidcaneso.singletons.StageReference;    import flash.display.Stage;    import flash.errors.IllegalOperationError;    import flash.external.ExternalInterface;    public class SiteTracking	{		private static var _instance:SiteTracking;		//properties		private var _isLocal:Boolean;		private var _trackerList:Array;		private var _defaultTracker:String;		public static function get instance():SiteTracking		{			if (! SiteTracking._instance)			{				SiteTracking._instance = new SiteTracking(new PrivateClass  );			}			return SiteTracking._instance;		}		//constructor		public function SiteTracking(pvt:PrivateClass):void		{			if (! pvt)			{				throw new IllegalOperationError("You may not instantiate this Singleton class directly. use the get instance() method.");			}			_trackerList = new Array  ;			_isLocal = false;			var stageReference:Stage = StageReference.instance.stage;			if ((stageReference == null))			{				throw new IllegalOperationError("SiteTracking relies on the StageReference singleton to be setup prior to setting up this class. Call StageReference.instance.stage = this.stage from your Main class");			}			if (stageReference.loaderInfo.url.substr(0,7) == 'file://')			{				_isLocal = true;				trace('tracking is running locally');			}		}		//getters		public function get isLocal():Boolean		{			return _isLocal;		}		public function get trackerList():Array		{			return _trackerList;		}		public function get defaultTracker():String		{			return _defaultTracker;		}		//public methods		public function addTracker(val:String,useAsDefault:Boolean=false):void		{			_trackerList.push(val);			if (useAsDefault)			{				_defaultTracker = val;			}		}		public function trackEvent(category:String, action:String, val:String=null,labelVal:String=null):void		{			var localTest:Boolean = _isLocal;			var tracker:String = '';			if (localTest)			{				if ((labelVal != null))				{					//trace((((((("javascript:" + tracker) + "._trackEvent('") + val) + "', '") + labelVal) + "');"));                    trace((((((("javascript:_trackEvent('") + category+', '+action+', '+val) + "', '") + labelVal) + "');")));				}				else				{//					trace((((("javascript:" + tracker) + "._trackEvent('") + val) + "');"));                    trace((((("javascript:_trackEvent('") + category+', '+action+', '+ val) + "');")));				}			}			else			{				if ((labelVal != null))				{                    ExternalInterface.call(("_trackEvent"),category, action, val, labelVal);					//_googleTrack(tracker,val,labelVal);				}				else				{                    ExternalInterface.call(("_trackEvent"),category, action, val);					//_googleTrack(tracker,val);				}			}		}        public function track(trackerName:String=null,val:String=null,labelVal:String=null):void		{			var localTest:Boolean = _isLocal;			var tracker:String = validateTrackerName(trackerName);			if (localTest)			{				if ((labelVal != null))				{					//trace((((((("javascript:" + tracker) + "._trackEvent('") + val) + "', '") + labelVal) + "');"));                    trace((((((("javascript:_trackEvent('") + val) + "', '") + labelVal) + "');")));				}				else				{//					trace((((("javascript:" + tracker) + "._trackEvent('") + val) + "');"));                    trace((((("javascript:_trackEvent('") + val) + "');")));				}			}			else			{				if ((labelVal != null))				{					_googleTrack(tracker,val,labelVal);				}				else				{					_googleTrack(tracker,val);				}			}		}		// calls google javascript through external interface		private function _googleTrack(tracker:String,val:String,labelVal:String=null):void		{			if ((labelVal != null))			{                ExternalInterface.call(("_trackEvent"),val,labelVal);				if ((tracker == _defaultTracker))				{//					ExternalInterface.call((tracker + "._trackPageview"),val,labelVal);				}				else				{//					ExternalInterface.call((tracker + "._trackEvent"),val,labelVal);				}			}			else			{                ExternalInterface.call(("_trackEvent"),val);				if ((tracker == _defaultTracker))				{//					ExternalInterface.call((tracker + "._trackPageview"),val);				}				else				{//					ExternalInterface.call((tracker + "._trackEvent"),val);				}			}		}		private function validateTrackerName(trackerName:String):String		{			var validTrackerNames:Array = _trackerList;			var limit:Number = validTrackerNames.length;			for (var i:Number = 0; i < limit; i++)			{				if ((trackerName == validTrackerNames[i]))				{					return validTrackerNames[i];				}			}			return '';		}	}}//Singleton Enforcerclass PrivateClass {}