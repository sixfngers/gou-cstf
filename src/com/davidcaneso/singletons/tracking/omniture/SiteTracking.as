/*sets up Omniture tracking for Universalauthor: David Canesocontact: code@davidcaneso.comversion: 1.0date: 05/06/09change log: v_1.0 first buildTO DO:  usage:*/package com.davidcaneso.singletons.tracking.omniture{	import com.davidcaneso.singletons.StageReference;	import flash.display.Stage;	import flash.errors.IllegalOperationError;	import flash.net.URLRequest;	import flash.net.navigateToURL;	public class SiteTracking	{		private static var _instance:SiteTracking;		//properties		private var _isLocal:Boolean;		public static function get instance():SiteTracking		{			if (! SiteTracking._instance)			{				SiteTracking._instance = new SiteTracking(new PrivateClass  );			}			return SiteTracking._instance;		}		//constructor		public function SiteTracking(pvt:PrivateClass):void		{			if (! pvt)			{				throw new IllegalOperationError("You may not instantiate this Singleton class directly. use the get instance() method.");			}			_isLocal = false;			var stageReference:Stage = StageReference.instance.stage;			if ((stageReference == null))			{				throw new IllegalOperationError("SiteTracking relies on the StageReference singleton to be setup proir to setting up this class. Call StageReference.instance.stage = this.stage from your Main class");			}			if (stageReference.loaderInfo.url.substr(0,7) == 'file://')			{				_isLocal = true;				trace('Omniture tracking is running locally');			}		}		//getters		public function get isLocal():Boolean		{			return _isLocal;		}		//public methods		public function track(val:String):void		{			if (! _isLocal)			{				var url:String = "javascript:var x = new Object(); x.pageName = '" + val + "'; trackEvent(x);";				var request:URLRequest = new URLRequest(url);				try				{					navigateToURL(request,"_self");				}				catch (e:Error)				{					// handle error here				}			}			trace(('Omniture track: ' + val));		}	}}//Singleton Enforcerclass PrivateClass {}