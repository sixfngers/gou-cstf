package com.davidcaneso.singletons{	import flash.display.Stage;	import flash.errors.IllegalOperationError;	public class StageReference	{		private static var _instance:StageReference;		private var _stage:Stage;		public static function get instance():StageReference		{			if (! StageReference._instance)			{				StageReference._instance = new StageReference(new PrivateClass  );			}			return StageReference._instance;		}		public function StageReference(pvt:PrivateClass):void		{			if (! pvt)			{				throw new IllegalOperationError("You may not instantiate this Singleton class directly.  Please use the static getter get instance() method.");			}		}		public function set stage(val:Stage):void		{			_stage = val;		}		public function get stage():Stage		{			return _stage;		}	}}//Singleton Enforcerclass PrivateClass { }