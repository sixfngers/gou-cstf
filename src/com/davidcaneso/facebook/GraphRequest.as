package com.davidcaneso.facebook{	import com.adobe.serialization.json.JSON;	import com.davidcaneso.facebook.events.GraphEvent;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLLoaderDataFormat;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	/**	 * ...	 * @author Brian Hodge	 */	public class GraphRequest extends EventDispatcher	{		public var data:Object;				//Public Methods		/**		 * load		 * Make sure you are listening for the		 * GraphEvent.REQUEST_READY Event		 * before using the load command.		 * @param	pRequest		 */		public function load(pRequest:String, format:String = URLLoaderDataFormat.TEXT):void		{			var loader:URLLoader = new URLLoader();			loader.dataFormat = format;			loader.addEventListener(Event.COMPLETE, _onLoaderComplete);			loader.addEventListener(IOErrorEvent.IO_ERROR, _onIOError);						var request:URLRequest = new URLRequest(pRequest);			request.method = URLRequestMethod.POST;						loader.load(request);		}		//Private Methods		private function _onLoaderComplete(e:Event):void		{			URLLoader(e.target).removeEventListener(Event.COMPLETE, _onLoaderComplete);			URLLoader(e.target).removeEventListener(IOErrorEvent.IO_ERROR, _onIOError);						data = JSON.decode(e.target.data);						dispatchEvent(new GraphEvent(GraphEvent.REQUEST_READY, data));		}		private function _onIOError(e:IOErrorEvent):void		{			throw(new Error(e.text));		}	}}