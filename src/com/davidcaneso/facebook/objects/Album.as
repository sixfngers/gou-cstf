package com.davidcaneso.facebook.objects{	import com.davidcaneso.facebook.FBConnect;	import com.davidcaneso.facebook.GraphConstants;	import com.davidcaneso.facebook.GraphRequest;	import com.davidcaneso.facebook.events.GraphEvent;	import com.davidcaneso.utils.LiveTrace;		public class Album extends GraphObject	{		private var _aid			:String;		private var _albumName		:String;		private var _cover			:String;		private var _coverUrl		:String;		private var _largeCoverUrl	:String;		private var _imageCount		:int;		private var _imageList		:Object;												public function Album(aid:String, albumName:String, cover:String, count:int):void		{			_aid 		= aid;			_albumName 	= albumName;			_cover 		= cover;			_imageCount = count;						//_loadAlbumCoverInfo()		}				public function loadAlbumCoverInfo():void		{			var token:String = FBConnect.instance.session.access_token;			var request:GraphRequest = new GraphRequest();			request.addEventListener(GraphEvent.REQUEST_READY, _coverImageInfoLoaded);			request.load(GraphConstants.BASE_HTTPS + _cover + GraphConstants.ACCESS_TOKEN + token);		}				public function loadImagesInfo():void		{			var token:String = FBConnect.instance.session.access_token;			var request:GraphRequest = new GraphRequest();			request.addEventListener(GraphEvent.REQUEST_READY, _loadImagesInfoComplete);			request.load(GraphConstants.BASE_HTTPS + _aid + GraphConstants.PHOTOS + GraphConstants.ACCESS_TOKEN + token);		}				public function get aid():String			{ return _aid;			}		public function get albumName():String		{ return _albumName;	}		public function get cover():String			{ return _cover;	 	}		public function get coverUrl():String		{ return _coverUrl;		}		public function get largeCoverUrl():String	{ return _largeCoverUrl;}		public function get imageList():Object		{ return _imageList;	}		public function get imageCount():int		{ return _imageCount;	}								///////////////////////////		//    PRIVATE METHODS    //		///////////////////////////		private function _coverImageInfoLoaded(e:GraphEvent):void		{			LiveTrace.output('Albums :: coverImageInfoLoaded ');			GraphRequest(e.target).removeEventListener(GraphEvent.REQUEST_READY, _coverImageInfoLoaded);						var imageInfo:Object = e.data;			LiveTrace.output('album cover image '+imageInfo.picture);			_coverUrl = imageInfo.picture;			_largeCoverUrl = imageInfo.images[0].source;						//FBConnect.instance.dispatchEvent(new GraphEvent(GraphEvent.ALBUM_COVER_INFO_READY))			dispatchEvent(new GraphEvent(GraphEvent.ALBUM_COVER_INFO_READY));		}						private function _loadImagesInfoComplete(e:GraphEvent):void		{			LiveTrace.output('Albums :: loadImagesInfoComplete');			GraphRequest(e.target).removeEventListener(GraphEvent.REQUEST_READY, _loadImagesInfoComplete);						_imageList = e.data.data;			var iLimit:int = _imageList.length;			for(var i:int = 0; i<iLimit; i++)			{				LiveTrace.output('album image '+_imageList[i].picture+' '+_imageList[i].source);			}						dispatchEvent(new GraphEvent(GraphEvent.ALBUM_IMAGES_INFO_READY, _imageList));		}	}}