package com.davidcaneso.facebook.events{	import flash.events.Event;		public class GraphEvent extends Event 	{		//OAuth2 Authorization		//********************		public static const USER_TEST_COMPLETE			:String = "userTestComplete";		public static const CONNECTED_USER				:String = "connectedUser";		public static const LOGGED_IN					:String = "loggedIn";		public static const LOGGED_OUT					:String = "loggedOut";		public static const LOGIN_WINDOW_OPEN			:String = "loginWindowOpen";				//	LOGIN_WINDOW_CLOSED is unreliable		//	you will never know if a user cancels the login process without logging in		public static const LOGIN_WINDOW_CLOSED			:String = "loginWindowClosed";				//Graph API Requests		//******************		public static const REQUEST_READY				:String = "requestReady";		public static const USER_INFO_READY				:String = "userInfoReady";		public static const USER_IMAGE_READY			:String = "userImageReady";		public static const ALBUM_INFO_READY			:String = "albumInfoReady";		public static const ALBUM_IMAGES_INFO_READY		:String = "albumImagesInfoReady";		public static const ALBUM_COVER_INFO_READY		:String = "albumCoverInfoReady";		public static const ALBUM_IMAGE_SELECTED		:String = 'albumImageSelected';				public static const APP_ALBUM_CREATED			:String = 'appAlbumCreated';		public static const APP_ALBUM_CREATED_ERROR		:String = 'appAlbumCreatedError';				/*		public static const ALBUM_READY			:String = "albumReady";		public static const PHOTOS_READY		:String = "photosReady";		public static const UPLOAD_STARTED		:String = "uploadStarted";		public static const UPLOAD_COMPLETE		:String = "uploadComplete";		*/				public var data:Object;				public function GraphEvent(type:String, pObject:Object=null, bubbles:Boolean=false, cancelable:Boolean=false) 		{ 			super(type, bubbles, cancelable);			data = pObject;		} 				public override function clone():Event 		{ 			return new GraphEvent(type, data, bubbles, cancelable);		} 				public override function toString():String 		{ 			return formatToString("GraphEvent", "data", "type", "bubbles", "cancelable", "eventPhase"); 		}			}	}