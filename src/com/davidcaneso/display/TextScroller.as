package com.davidcaneso.display{	import com.greensock.*;	import com.greensock.easing.*;	import com.davidcaneso.display.drawing.SquareArea;	import com.davidcaneso.events.SliderEvent;	import com.davidcaneso.events.TextScrollerEvent;	import com.davidcaneso.text.DynamicTextField;	import flash.display.Sprite;	import flash.events.Event;	public class TextScroller extends Sprite	{		private var _scroller:Slider;		private var _mask:SquareArea;		private var _textField:DynamicTextField;		private var _bottomScrollBuffer:int;		public function TextScroller(visibleWidth:int,visibleHeight:int,textField:DynamicTextField,scroller:Slider,bottomScrollBuffer:int=0):void		{			_bottomScrollBuffer = bottomScrollBuffer;			_mask = new SquareArea(visibleWidth,visibleHeight);			_mask.alpha = .4;			_textField = textField;			_textField.mask = _mask;			_scroller = scroller;			addChild(_textField);			addChild(_mask);			addChild(_scroller);			addEventListener(Event.ADDED_TO_STAGE,_init);		}		public function destroy():void		{			removeEventListener(Event.ADDED_TO_STAGE,_init);			_scroller.removeEventListener(SliderEvent.DRAG_START,_handleScrollerInteract);			_scroller.removeEventListener(SliderEvent.DRAG_UPDATE,_handleScrollerInteract);			_scroller.removeEventListener(SliderEvent.DRAG_STOP,_handleScrollerInteract);			_scroller.destroy();			_scroller = null;			_mask = null;			_textField = null;		}		public function updateText(val:String):void		{			_textField.text = val;			_checkIfScrollerIsNecessary();		}		public function moveHandleToPercentage(percent:int=0):void		{			_scroller.moveHandleToPercent(percent,true);		}		public function get textField():DynamicTextField		{			return _textField;		}		public function get scroller():Slider		{			return _scroller;		}		private function _init(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,_init);			_checkIfScrollerIsNecessary();			_scroller.addEventListener(SliderEvent.DRAG_START,_handleScrollerInteract);			_scroller.addEventListener(SliderEvent.DRAG_UPDATE,_handleScrollerInteract);			_scroller.addEventListener(SliderEvent.DRAG_STOP,_handleScrollerInteract);		}		private function _checkIfScrollerIsNecessary():void		{			if (_textField.height >= _mask.height)			{				trace('scrollerIsNecessary');				dispatchEvent(new TextScrollerEvent(TextScrollerEvent.ACTIVATE));			}			else			{				trace('scrollerIsUnnecessary');				dispatchEvent(new TextScrollerEvent(TextScrollerEvent.DEACTIVATE));			}		}		private function _handleScrollerInteract(e:SliderEvent):void		{			var percent:int = e.percent;			var ypos:int =  -  int(_textField.height + _bottomScrollBuffer - _mask.height * (percent * .01));			TweenMax.to(_textField,.2,{y:ypos,ease:Quad.easeOut});			switch (e.type)			{				case SliderEvent.DRAG_START :					_textField.cacheAsBitmap = true;					break;				case SliderEvent.DRAG_STOP :					_textField.cacheAsBitmap = false;					break;			}		}	}}