package com.davidcaneso.framework{    import com.davidcaneso.events.framework.DevelopmentEnvironmentEvent;    import com.davidcaneso.events.framework.SectionEvent;    import com.davidcaneso.events.framework.SiteManagerEvent;    import com.davidcaneso.singletons.StageReference;    import com.davidcaneso.singletons.XMLData;    public class Section extends ActiveSiteElement	{		//properties		protected var _sectionNumber:int;		protected var _isActive:Boolean;		protected var _sectionDeeplinks:Array;		//constructor		public function Section()		{			super();			_className = 'Section';			_isActive = false;			_devSectionNumber = -1;			_devConfigFile = '';			_devSetupType = DevelopmentEnvironment.SECTION_EVENT_TYPES;			_sectionDeeplinks = [];		}		//mandatory override methods		override protected function setup():void		{			if (_top.multistageDeeplinks != null)			{				_sectionDeeplinks = _top.multistageDeeplinks;				_top.multistageDeeplinks = [];			}			classTrace(('_sectionDeeplinks.length: ' + _sectionDeeplinks.length));			classTrace(('_sectionDeeplinks: ' + _sectionDeeplinks));		}		protected function animateIn():void{}		protected function animateOut():void{}		//private methods		override protected function init():void		{			classTrace('init');			if (! _dev)			{				_top = SiteManager(StageReference.instance.stage.getChildAt(0));				_sectionNumber = _top.nextSectionNumber;				_xml = XMLList(XMLData.instance.sitemap.sectionlist.section[_sectionNumber]);			}			super.init();		}		protected function sectionAnimateInComplete():void		{			classTrace('hit sectionAnimateInComplete');			StageReference.instance.stage.dispatchEvent(new SectionEvent(SectionEvent.TRANSITION_IN_COMPLETE));		}		protected function sectionAnimateOutComplete():void		{			classTrace('hit sectionAnimateOutComplete');            StageReference.instance.stage.dispatchEvent(new SectionEvent(SectionEvent.TRANSITION_OUT_COMPLETE));		}		override protected function handleSiteStateUpdate(e:SiteManagerEvent):void		{			var currentState:String = _top.siteState;			classTrace(('handleSiteStateUpdate ' + currentState));			switch (currentState)			{				case SiteManager.SECTION_TRANS_IN_STATE :					_isActive = true;					classTrace('animateIn');					animateIn();					break;				case SiteManager.SECTION_TRANS_OUT_STATE :					_isActive = false;					classTrace('animateOut');					animateOut();					break;				case SiteManager.SLEEP_STATE :					if (_isActive)					{						sleep();					}					break;				case SiteManager.WAKE_STATE :					if (_isActive)					{						wake();					}					break;			}		}		override public function destroy():void		{			//remove all listeners and stop all timers			classTrace('destroy', _className);			super.destroy();		}		//development methods		override protected function devSetupComplete(e:DevelopmentEnvironmentEvent):void		{			StageReference.instance.stage = stage;			_sectionNumber = _devSectionNumber;			_xml = XMLList(XMLData.instance.sitemap.sectionlist.section[_sectionNumber]);			//classTrace('_xml: '+_xml)			super.devSetupComplete(e);		}	}}