package com.davidcaneso.collections.types{	//	imports	import com.davidcaneso.collections.List;					public class Deeplink extends List	{		//	constructor		public function Deeplink(xml:XMLList = null, namesAttribute:String = null, valuesAttribute:String = null):void		{			trace("hit Deeplink Constructor")			if(xml == null) return;						var limit:int = xml.children().length();			for(var i:int = 0; i<limit; i++){				addDeeplink(xml.children()[i].@[namesAttribute], Number(xml.children()[i].@[valuesAttribute]));			}		}				//	methods		public function addDeeplink(deeplinkName:String, deeplinkValue:Number):void		{			trace("addDeeplink "+deeplinkName+" with value "+deeplinkValue)			addToList(deeplinkName, deeplinkValue);		}				public function findDeeplink(deeplinkName:String):Number		{			var returnVal:Number = Number( findInList(deeplinkName) );			trace('deeplink '+deeplinkName+' found with value '+returnVal)			return returnVal;		}				public function getDeeplinkNameAt(deeplinkNumber:Number):String		{			trace("find deeplink name at "+deeplinkNumber)			var returnVal:String = String( names[deeplinkNumber] );			return returnVal;		}			}	}