package com.site.ui{	import flash.display.*;	import flash.text.*;	import flash.events.*;	import flash.geom.Point;		import com.greensock.*	import com.greensock.easing.*		import com.davidcaneso.framework.Section;	import com.davidcaneso.framework.DevelopmentEnvironment	import com.davidcaneso.singletons.RuntimeAssets	import com.davidcaneso.singletons.Styling	import com.davidcaneso.singletons.XMLData	import com.davidcaneso.events.framework.DevelopmentEnvironmentEvent	import com.davidcaneso.events.framework.SiteManagerEvent;	import com.davidcaneso.events.framework.SectionEvent;	import com.davidcaneso.text.DynamicTextField;	import com.davidcaneso.framework.SimpleLink;	import com.davidcaneso.display.drawing.SquareArea;	import com.davidcaneso.display.buttons.BasicButton	import com.davidcaneso.display.buttons.LinkButton			public class StepChangeButton extends BasicButton	{		protected var _tf:DynamicTextField		protected var _bg:SquareArea		protected var _icon:MovieClip				public function StepChangeButton(color:Number, buttonText:String, buttonTextFormat:TextFormat)		{			super()			_bg = new SquareArea(96, 32, color, false);			_tf = new DynamicTextField(_bg.width, _bg.height, buttonTextFormat);			_tf.text = buttonText;			_tf.y = int((_bg.height - _tf.height) * .5);						RuntimeAssets.instance.displayAssetNames();						var iconBmp:Bitmap = RuntimeAssets.instance.duplicateAsset('prevNextIcon');			_icon = new MovieClip();			_icon.addChild(iconBmp);			_icon.y = int((_bg.height - _icon.height) * .5) + 2;						addChild(_bg);			addChild(_tf);			addChild(_icon);		}				public function get icon():MovieClip		{			return _icon;		}				public function enableButton():void		{			super.enable()		}				public function disableButton():void		{			super.disable()		}				override protected function buttonRollOver():void		{			dispatchEvent(new Event('StepChangeButtonRollOver'))		}				override protected function buttonRollOut():void		{			dispatchEvent(new Event('StepChangeButtonRollOut'))		}				override protected function buttonClick():void		{			dispatchEvent(new Event('StepChangeButtonClick'))		}					}	}