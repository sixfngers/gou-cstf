package com.site.ui{	import flash.display.*;	import flash.text.*;	import flash.events.*;	import flash.geom.Point;	import flash.utils.Timer;		import com.greensock.*	import com.greensock.easing.*		import com.davidcaneso.framework.Section;	import com.davidcaneso.framework.DevelopmentEnvironment	import com.davidcaneso.singletons.RuntimeAssets	import com.davidcaneso.singletons.Styling	import com.davidcaneso.singletons.XMLData	import com.davidcaneso.events.framework.DevelopmentEnvironmentEvent	import com.davidcaneso.events.framework.SiteManagerEvent;	import com.davidcaneso.events.framework.SectionEvent;	import com.davidcaneso.text.DynamicTextField;	import com.davidcaneso.framework.SimpleLink;	import com.davidcaneso.display.drawing.SquareArea;	import com.davidcaneso.display.buttons.BasicButton	import com.davidcaneso.display.buttons.LinkButton		import com.davidcaneso.loading.Preloader;	import com.site.sections.ProjectData;	import com.site.ui.ThumbLiveLinkButton		import com.davidcaneso.events.loading.PreloaderEvent;	import com.davidcaneso.utils.LiveTrace;	import com.site.ui.events.FullDisplayPaginationEvent;	import com.site.ui.TimerToggle		import com.davidcaneso.events.buttonEvent.ToggleButtonEvent;	import com.site.sections.ArrowButton;	import com.site.ui.events.FullDisplayProjectChangeEvent;	public class FullDisplayProjectControls extends Sprite	{		private var _displayWidth:int		private var _current:int		private var _total:int				private var _prevArrow:ArrowButton		private var _nextArrow:ArrowButton				private var _visibleX:int		private var _hiddenX:int				public function FullDisplayProjectControls(total:int, displayWidth:int)		{			_total = total			_displayWidth = displayWidth;						_prevArrow = new ArrowButton()			_prevArrow.scaleX = -1			_prevArrow.x = -((displayWidth * .5) + _prevArrow.width)			_prevArrow.y = -(_prevArrow.height * .5)			_nextArrow = new ArrowButton()			_nextArrow.x = ((displayWidth * .5) + _prevArrow.width)			_nextArrow.y = _prevArrow.y						_visibleX = Math.abs(_prevArrow.x)			_hiddenX = 0						_prevArrow.addEventListener(MouseEvent.CLICK, _handleArrowInteract)			_nextArrow.addEventListener(MouseEvent.CLICK, _handleArrowInteract)						addChild(_prevArrow)			addChild(_nextArrow)						this.visible = false			this.alpha = 0			animateOut(0)		}				public function updateCurrentForProjectSkip(newVal:int):void		{			trace('update current '+newVal)			_updateCurrent(newVal)		}				public function animateIn(currentProject:int, t:Number = .5, delay:Number = 0):void		{			_updateCurrent(currentProject)			_prevArrow.enableButton()			_nextArrow.enableButton()						TweenMax.to(this, .3, {autoAlpha:1})			_prevArrow.x = _hiddenX;			_nextArrow.x = _hiddenX;			TweenMax.to(_prevArrow, t, {x:-(_visibleX), ease:Back.easeOut, delay:delay})			TweenMax.to(_nextArrow, t, {x:_visibleX, ease:Back.easeOut, delay:delay})		}				public function animateOut(t:Number = .5, delay:Number = 0):void		{			_prevArrow.disableButton()			_nextArrow.disableButton()			TweenMax.to(this, t, {autoAlpha:0})		}				private function _updateCurrent(newVal:int):void		{			_current = newVal			trace('full project display controls _current  ='+_current)		}				private function _handleArrowInteract(e:Event):void		{			var modifier:int = 1			if(e.target == _prevArrow) modifier *= -1;						var next = _current + modifier;			if(next < 0) next = _total - 1;			if(next >= _total) next = 0						_updateCurrent(next)						dispatchEvent(new FullDisplayProjectChangeEvent(FullDisplayProjectChangeEvent.CHANGE, next, modifier))								}					}	}