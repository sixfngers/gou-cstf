package com.site.ui{	import com.greensock.easing.Linear;	import flash.display.*;	import com.greensock.*	import com.davidcaneso.singletons.RuntimeAssets	import com.davidcaneso.singletons.XMLData	import com.davidcaneso.display.buttons.ToggleButton;	import com.davidcaneso.display.drawing.CircularOutline;	public class TimerToggle extends ToggleButton	{		private var _container:Sprite;		private var _icon:Sprite;		private var _iconContainer:Sprite;		private var _delay:int;				public function TimerToggle()		{			super(true, true);						_delay = int(XMLData.instance.sitemap.sectionlist.section[0].content.@cycletimer) * .001;						_icon = RuntimeAssets.instance.findAsset('clock');			Bitmap(_icon.getChildAt(0)).smoothing = true;			_icon.visible = true;			_icon.x = -(int(_icon.width * .5));			_icon.y = -(int(_icon.height * .5));						var circle:CircularOutline = new CircularOutline(6, 5, true, 0, 0);			circle.knockout();						_iconContainer = new Sprite();			_iconContainer.x = Math.abs(_icon.x);			_iconContainer.y = Math.abs(_icon.y);			_iconContainer.addChild(circle);			_iconContainer.addChild(_icon);						_container = new Sprite();			_container.addChild(_iconContainer);						addChild(_container);		}				public function startRotation():void		{			_rotateIcon()		}				public function stopRotation():void		{			TweenMax.killTweensOf(_iconContainer);			reset();		}				public function reset():void		{			_iconContainer.rotation = 0		}				private function _rotateIcon():void		{			TweenMax.to(_iconContainer, _delay, {rotation:'360', ease:Linear.easeInOut, onComplete:_rotateIcon})		}				override protected function buttonClick():void		{			super.buttonClick();			if(super.isOn) 	startRotation();			else			stopRotation()		}	}	}