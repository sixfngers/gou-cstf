package com.site{    import com.davidcaneso.display.drawing.SquareArea;    import com.davidcaneso.events.framework.SiteManagerEvent;    import com.davidcaneso.events.loading.PreloaderEvent;    import com.davidcaneso.framework.SiteManager;    import com.davidcaneso.loading.Preloader;import com.davidcaneso.singletons.StageReference;import com.greensock.*;    import com.greensock.easing.*;    import flash.display.DisplayObjectContainer;    import flash.display.MovieClip;    import flash.display.Sprite;    import flash.events.Event;    import flash.events.MouseEvent;    import flash.text.*;    public class SiteInitialPreloader extends Preloader	{        public var percentLoaded:int = 0;		private var _top		:MovieClip;		private var _visual		:MovieClip;		private var _skipButton	:Sprite;				private var _bg:SquareArea;		private var _bar:SquareArea;		private var _tf:MovieClip;				private static const CLASS_NAME:String = 'SiteInitialPreloader';				public function SiteInitialPreloader(top:MovieClip):void		{			_top = top;			addEventListener(Event.ADDED_TO_STAGE, init);		}				//	public methods		public function animateIn():void		{			classTrace('animateIn');			hideSkipIntroButton();			//_bar.scaleX = 0;			TweenMax.to(_visual, .3, {autoAlpha:1, ease:Quad.easeOut, onComplete:super.startLoad});		}				//	private methods		private function init(e:Event):void		{			classTrace('init');			removeEventListener(Event.ADDED_TO_STAGE, init);			addEventListener(Event.REMOVED_FROM_STAGE, kill);            _bg = new SquareArea(100, 100, 0, false);            _bg.addEventListener(MouseEvent.CLICK, _bgInteract);            _visual = new sitePreloaderVisual();            _visual.y = 768 * .5;            _visual.fill.cacheAsBitmap = true;            _visual.masking.cacheAsBitmap = true;            _visual.fill.mask = _visual.masking;            _visual.pctField.text = '00%';//			_visual = new Sprite();//			_visual.alpha = 0;			addChild(_bg);            addChild(_visual);						//_tf = new preloaderVisual();            //_tf.field.autoSize = TextFieldAutoSize.NONE;            //_tf.field.textAlign = TextAlign.CENTER;//			_bg = new SquareArea(300, 10, 0xffffff);////            _bar = new SquareArea(294, 6, 0x2b9395);//			_bar.x = 3;//			_bar.y = 2;			//_visual.addChild(_bg);			//_visual.addChild(_bar);			//_visual.addChild(_tf);									_skipButton = new Sprite();			_skipButton.alpha = 0;			_skipButton.visible = false;			_skipButton.mouseChildren = false;			_skipButton.buttonMode = true;			_skipButton.addEventListener(MouseEvent.CLICK, handleSkipClick);			//addChild(_skipButton)						var skipText:TextField = new TextField();			skipText.width = 100;			skipText.height = 50;			skipText.text = 'skip intro';						var skipArea:SquareArea = new SquareArea(skipText.width, skipText.height, 0xff0000);			_skipButton.addChild(skipArea);			_skipButton.addChild(skipText);						super.addEventListener(	PreloaderEvent.FILE_CHANGE, newFileLoading			);			super.addEventListener(	PreloaderEvent.UPDATE,		updateLoader			);			super.addEventListener(	PreloaderEvent.COMPLETE,	animateOut				);//			super.addEventListener(	PreloaderEvent.COMPLETE,	_prepForAnimateOut				);            StageReference.instance.stage.addEventListener('animatePreloaderOutEvent', function(e:Event):void{animateOut(null)})		}        private function _prepForAnimateOut(e:PreloaderEvent):void        {            // hold here until animatePreloaderOutEvent is dispatched on stage.            // animatePreloaderOutEvent means the db call was finished and the video is setup to play;        }        private function _bgInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.CLICK:                    break;            }        }				private function kill(e:Event):void		{			removeEventListener(		Event.ADDED_TO_STAGE, 				init					);			removeEventListener(		Event.REMOVED_FROM_STAGE, 			kill					);						super.removeEventListener(	PreloaderEvent.FILE_CHANGE, 		newFileLoading			);			super.removeEventListener(	PreloaderEvent.UPDATE,				updateLoader			);			super.removeEventListener(	PreloaderEvent.COMPLETE,			animateOut				);						super.destroy();		}				private function newFileLoading(e:PreloaderEvent):void		{			var target:DisplayObjectContainer = DisplayObjectContainer(e.loadTarget);						if(target == MovieClip(_top).introHolder)			{				showSkipIntroButton();				if(MovieClip(_top).siteState != SiteManager.INITIAL_LOADING_STATE)					MovieClip(_top).changeSiteState(SiteManager.INTRO_LOADING_STATE);			}						//			classTrace('loading '+e.file +' into '+ e.loadTarget);		}				private function animateOut(e:PreloaderEvent):void		{			classTrace("animate initial loader visuals out");			hideSkipIntroButton();			TweenMax.killTweensOf(_visual);			//TweenMax.to(_visual, .5, {autoAlpha:0, ease:Quad.easeOut, onComplete:animateOutComplete});			TweenMax.to(_bg, .5, {autoAlpha:0, ease:Quint.easeOut, delay:.1});            TweenMax.to(_visual, .5, {autoAlpha:0, ease:Quint.easeOut, delay:.1, onComplete:animateOutComplete});			//TweenMax.to(_bar, .2, {autoAlpha:0, ease:Quad.easeIn});			//TweenMax.to(_bg, .5, {width:_top.contractedDisplayWidth, height:_top.contractedDisplayHeight, delay:.1, ease:Quint.easeInOut, onComplete:animateOutComplete});            //dispatchEvent(new Event(Event.COMPLETE));			//stage.dispatchEvent(new SiteManagerEvent(SiteManagerEvent.INITIAL_ANIMATION_START, SiteManager(_top).siteState, SiteManager(_top).activeSectionNumber, SiteManager(_top).nextSectionNumber));		}				private function animateOutComplete():void		{			//TweenMax.to(this, 0, {autoAlpha:0});            dispatchEvent(new Event(Event.COMPLETE));		}				private function updateLoader(e:PreloaderEvent):void		{			var percentage:int = e.percent;			//trace("update the loader to reflect "+ percentage +" loaded "+percentage / 100);			//_bar.scaleX = percentage * .01;            //_tf.field.text = e.percent+'%';            //_tf.x = ((320 - _tf.field.width) * .5);            _visual.gotoAndStop(percentage);            _visual.pctField.text = percentage+'%';            percentLoaded = percentage;            dispatchEvent(new Event(Event.CHANGE));		}				private function showSkipIntroButton():void		{			classTrace('showSkipIntroButton');			TweenMax.to(_skipButton, .2, {autoAlpha:1, ease:Expo.easeOut});		}				private function hideSkipIntroButton():void		{			TweenMax.to(_skipButton, .2, {autoAlpha:0, ease:Expo.easeOut});		}				private function handleSkipClick(e:MouseEvent):void		{			switch(e.type)			{				case MouseEvent.CLICK:					classTrace("hit skipIntroClick");					super.stopLoad();					super.clearLoadStack();					_top.skipInitialIntro = true;					animateOut(null);					break;			}		}				//	development methods		private function classTrace(val:*):void		{			if(!super.showTraces) return;			_top.classTrace(val, CLASS_NAME);		}        public function get bg():SquareArea        {            return _bg;        }        public function get visual():MovieClip        {            return _visual;        }    }	}