package com.site.app.steps{    //	imports    import com.adobe.serialization.json.JSON;    import com.davidcaneso.collections.Queue;    import com.davidcaneso.events.loading.ServerLoaderEvent;    import com.davidcaneso.loading.ServerLoader;    import com.davidcaneso.singletons.StageReference;import com.davidcaneso.singletons.Styling;import com.davidcaneso.singletons.XMLData;    import com.davidcaneso.utils.LiveTrace;    import com.greensock.TweenMax;import com.greensock.easing.Circ;import com.greensock.easing.Quad;import com.greensock.easing.Quint;import com.greensock.plugins.MotionBlurPlugin;    import com.greensock.plugins.TweenPlugin;    import com.site.AppUser;    import com.site.AppUserDataModel;    import com.site.app.AppConsts;import com.site.app.AppNotificationEvent;import com.site.app.AppStep;    import com.site.app.AppStepEvent;    import flash.display.MovieClip;import flash.display.Stage;import flash.events.Event;    import flash.events.MouseEvent;    TweenPlugin.activate([MotionBlurPlugin]);    public class CarouselStep extends AppStep    {        //	properties        private var _content:MovieClip;        private var _isActive:Boolean = false;        private var _errorCount:int = 0;        private const MAX_ERROR_COUNT:int = 3;        private var _serverLoader:ServerLoader;        //private var _allDataIsLoaded:Boolean = false;        private var _total:int = -1;        private var _offset:int = 0;        private var _serverQueryInProgress:Boolean;        private var _searchQueryInProgress:Boolean;        private var _playerCarousel:VideoPlayerCarousel;        //private var _devData:String = '{"status":"success","data":{"total":17,"entries":[{"id":"23","timestamp":"2014-05-02 12:44:55","name":"gert","base_path":"","image_path":"3b6bf470b05b1414018e88d583a872f6mp4.png","gif_path":"3b6bf470b05b1414018e88d583a872f6mp4.gif","video_path":"3b6bf470b05b1414018e88d583a872f6.mp4","origin":""},{"id":"22","timestamp":"2014-05-02 12:24:46","name":"hsod","base_path":"","image_path":"ec0a847bf3f30bb1eebb8e3d5e481995mp4.png","gif_path":"ec0a847bf3f30bb1eebb8e3d5e481995mp4.gif","video_path":"ec0a847bf3f30bb1eebb8e3d5e481995.mp4","origin":""},{"id":"21","timestamp":"2014-05-02 12:15:33","name":"fgtr","base_path":"","image_path":"a3e76e8eda761cfd4bf01becdbee753cmp4.png","gif_path":"a3e76e8eda761cfd4bf01becdbee753cmp4.gif","video_path":"a3e76e8eda761cfd4bf01becdbee753c.mp4","origin":""},{"id":"20","timestamp":"2014-05-02 12:12:30","name":"gi","base_path":"","image_path":"ef4a003f1150853bcbdbe3ffee3c4fbamp4.png","gif_path":"ef4a003f1150853bcbdbe3ffee3c4fbamp4.gif","video_path":"ef4a003f1150853bcbdbe3ffee3c4fba.mp4","origin":""},{"id":"19","timestamp":"2014-05-02 12:09:38","name":"tewst","base_path":"","image_path":"2a3e5e86600c8415b2e1078d26d2a402mp4.png","gif_path":"2a3e5e86600c8415b2e1078d26d2a402mp4.gif","video_path":"2a3e5e86600c8415b2e1078d26d2a402.mp4","origin":""},{"id":"18","timestamp":"2014-05-02 11:03:29","name":"foo","base_path":"","image_path":"bcba8ed378ebe805fe63695d3321613bmp4.png","gif_path":"bcba8ed378ebe805fe63695d3321613bmp4.gif","video_path":"bcba8ed378ebe805fe63695d3321613b.mp4","origin":""},{"id":"17","timestamp":"2014-05-02 10:56:06","name":"foo","base_path":"","image_path":"687856885bcf85e46c78cf81e9c587c8mp4.png","gif_path":"687856885bcf85e46c78cf81e9c587c8mp4.gif","video_path":"687856885bcf85e46c78cf81e9c587c8.mp4","origin":""},{"id":"16","timestamp":"2014-05-02 10:52:36","name":"davif","base_path":"","image_path":"7d9d6042f13ad6f9b12a692de0536af5mp4.png","gif_path":"7d9d6042f13ad6f9b12a692de0536af5mp4.gif","video_path":"7d9d6042f13ad6f9b12a692de0536af5.mp4","origin":""},{"id":"15","timestamp":"2014-05-01 17:56:52","name":"hi","base_path":"","image_path":"920603dfcb11ca2ce4f3d055ad23925dmp4.png","gif_path":"920603dfcb11ca2ce4f3d055ad23925dmp4.gif","video_path":"920603dfcb11ca2ce4f3d055ad23925d.mp4","origin":""},{"id":"14","timestamp":"2014-05-01 16:18:44","name":"hamed","base_path":"","image_path":"81c8f2504be72e09c4e69414a57c5ca2mp4.png","gif_path":"81c8f2504be72e09c4e69414a57c5ca2mp4.gif","video_path":"81c8f2504be72e09c4e69414a57c5ca2.mp4","origin":"null"}]}}';        // webcam test data        private var _devData:String = '{"status":"success","data":{"total":17,"entries":[{"id":"90","timestamp":"2014-05-23 22:22:59","name":"ileezus","base_path":"https:\/\/bannerassets.universalstudios.com\/up\/cantstopthefunk\/QA\/","image_path":"4702112334003388786.png","gif_path":"4702112334003388786.gif","video_path":"4702112334003388786","origin":"webcam"},{"id":"89","timestamp":"2014-05-23 22:19:28","name":"hellodave","base_path":"https:\/\/bannerassets.universalstudios.com\/up\/cantstopthefunk\/QA\/","image_path":"4702112334942912881.png","gif_path":"4702112334942912881.gif","video_path":"4702112334942912881","origin":"webcam"},{"id":"88","timestamp":"2014-05-23 22:13:37","name":"dynamo","base_path":"https:\/\/bannerassets.universalstudios.com\/up\/cantstopthefunk\/QA\/","image_path":"4702112334808695153.png","gif_path":"4702112334808695153.gif","video_path":"4702112334808695153","origin":"webcam"},{"id":"87","timestamp":"2014-05-23 22:09:03","name":"ilisatonight","base_path":"https:\/\/bannerassets.universalstudios.com\/up\/cantstopthefunk\/QA\/","image_path":"4702112334389264753.png","gif_path":"4702112334389264753.gif","video_path":"4702112334389264753","origin":"webcam"}]}}';        private var _nextVideo:MovieClip;        //	constructor        public function CarouselStep(devMode:Boolean = false):void        {            _content = new carouselStageContent() as MovieClip;            addChild(_content);            super(devMode);            //_serverLoader = new ServerLoader(true, true);            _serverLoader = new ServerLoader(false, false);            _serverLoader.addEventListener(ServerLoaderEvent.START, _handleServerLoaderEvent);            _serverLoader.addEventListener(ServerLoaderEvent.COMPLETE, _handleServerLoaderEvent);            _serverLoader.addEventListener(ServerLoaderEvent.ERROR, _handleServerLoaderEvent);            _serverLoader.devLoadedData = _devData;            _nextVideo = carouselStageContent(_content).nextVideo;            _nextVideo.x = 810;            _nextVideo.y = 404;            _nextVideo.buttonMode = true;            _nextVideo.mouseChildren = false;            _nextVideo.tabEnabled = false;            _nextVideo.addEventListener(MouseEvent.ROLL_OVER, _handleNextVideoInteract);            _nextVideo.addEventListener(MouseEvent.CLICK, _handleNextVideoInteract);            _nextVideo.addEventListener(MouseEvent.ROLL_OUT, _handleNextVideoInteract);            _playerCarousel = new VideoPlayerCarousel();            //_playerCarousel.addEventListener(MouseEvent.CLICK, function(e:MouseEvent):void{_playerCarousel.changeVideo()});            _playerCarousel.used = new Queue();            _playerCarousel.pool = new Queue();            _playerCarousel.addEventListener(Event.CONNECT, _handlePlayerCarouselEvent);            _content.prevStep.visible = false;            _content.nextStep.visible = false;            LiveTrace.output('AppConsts.gifPath '+ AppConsts.gifPath);            loadNextUserGroup();            addChild(_playerCarousel);            addChild(_nextVideo);            StageReference.instance.stage.addEventListener(AppStepEvent.INJECT_USER, _handleInjectUser);            //StageReference.instance.stage.addEventListener('injectUser', _handleInjectUser);            StageReference.instance.stage.addEventListener(AppStepEvent.LEARN_MOVES, _handleLearnMovesEvent);            StageReference.instance.stage.addEventListener(AppStepEvent.CLOSE_LEARN_MOVES, _handleLearnMovesEvent);            StageReference.instance.stage.addEventListener(AppStepEvent.SLEEP_APP, _handleSleepApp);            StageReference.instance.stage.addEventListener(AppStepEvent.WAKE_APP, _handleWakeApp);            StageReference.instance.stage.addEventListener(AppStepEvent.SEARCH_FOR_VIDEO, _handleSearchForVideo);            StageReference.instance.stage.addEventListener(AppStepEvent.INITIAL_VIDEO_COMPLETE, _handleInitialShowSearchEvent);        }        private function _handleNextVideoInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(_nextVideo.icon ,.2, {tint:Styling.instance.findColor('black'), ease:Quad.easeOut});                    break;                case MouseEvent.ROLL_OUT:                    _rollOutNextStepButton();                    break;                case MouseEvent.CLICK:                    _hideNextVideoButton();                    _playerCarousel.changeVideo();                    removeInitialVideoListener();                    break;            }        }        private function _hideNextVideoButton():void        {            _nextVideo.removeEventListener(MouseEvent.ROLL_OVER, _handleNextVideoInteract);            _nextVideo.removeEventListener(MouseEvent.CLICK, _handleNextVideoInteract);            _nextVideo.removeEventListener(MouseEvent.ROLL_OUT, _handleNextVideoInteract);            TweenMax.killTweensOf(_nextVideo);            TweenMax.to(_nextVideo,.2,{y:404 - 46, autoAlpha:0, ease:Circ.easeOut});            _playerCarousel.addEventListener(AppStepEvent.SHOW_NEXT_VIDEO_BUTTON, _handleShowNextVideoButton);        }        private function _handleShowNextVideoButton(e:AppStepEvent):void        {            _rollOutNextStepButton(0);            _nextVideo.addEventListener(MouseEvent.ROLL_OVER, _handleNextVideoInteract);            _nextVideo.addEventListener(MouseEvent.CLICK, _handleNextVideoInteract);            _nextVideo.addEventListener(MouseEvent.ROLL_OUT, _handleNextVideoInteract);            _playerCarousel.removeEventListener(AppStepEvent.SHOW_NEXT_VIDEO_BUTTON, _handleShowNextVideoButton);            _nextVideo.alpha = 0;            _nextVideo.visible = false;            TweenMax.killTweensOf(_nextVideo);            TweenMax.to(_nextVideo,.3,{y:404, autoAlpha:1, ease:Quad.easeOut, delay:1});        }        private function _rollOutNextStepButton(t:Number = .2):void        {            TweenMax.to(_nextVideo.icon ,t, {removeTint:true, ease:Quad.easeOut});        }        private function _handleSearchForVideo(e:AppStepEvent):void        {            _hideNextVideoButton();            var notify:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.SHOW_NOTIFICATION);            notify.notificationType = AppNotificationEvent.SEARCH_START;            StageReference.instance.stage.dispatchEvent(notify);            LiveTrace.output('_handleSearchForVideo');            if(_serverQueryInProgress)                _serverLoader.stopLoad();            var  searchTotal:int = _total;            if(searchTotal < 0)                searchTotal = AppConsts.TOTAL_USER_LOAD;            _searchQueryInProgress = true;            LiveTrace.output('search url '+XMLData.instance.config.@apibaseurl + AppConsts.getSearchVideoUrl(searchTotal, e.param));            _serverLoader.startLoad(XMLData.instance.config.@apibaseurl + AppConsts.getSearchVideoUrl(searchTotal, e.param));        }        private function _handleLearnMovesEvent(e:AppStepEvent):void        {            if(_isActive)            {                if(e.type == AppStepEvent.LEARN_MOVES)                {                    _playerCarousel.pauseRotation();                }                else                {                    _playerCarousel.unpauseRotation();                }            }        }        private function _handleInjectUser(e:AppStepEvent):void        {            var userDataModel:AppUserDataModel = new AppUserDataModel();                userDataModel.userName = AppUser.userName;                userDataModel.userVideoPath = AppUser.userVideoPath;                userDataModel.basePath = AppUser.base_path;                userDataModel.userOrigin = AppUser.userOrigin;                if(AppUser.userImagePath)                    userDataModel.userImagePath = AppUser.userImagePath;                 else                    userDataModel.userImagePath = '';                if(AppUser.userGifPath)                    userDataModel.userGifPath = AppUser.userGifPath;                else                    userDataModel.userGifPath = '';            //_playerCarousel.pool.insertInQueue(userDataModel);            _playerCarousel.injectUserIntoNextVideoSlot(userDataModel, 1);        }        public function startApp():void        {            StageReference.instance.stage.dispatchEvent(new AppStepEvent(AppStepEvent.HIDE_SEARCH));            _handleNextStepClick(null);        }        private function _handlePlayerCarouselEvent(e:Event):void        {            if(!_playerCarousel.allDataLoaded)                loadNextUserGroup();            else                trace('all data is loaded');        }        private function _handleServerLoaderEvent(e:ServerLoaderEvent):void        {            switch(e.type)            {                case ServerLoaderEvent.START:                    _serverQueryInProgress= true;                    break;                case ServerLoaderEvent.COMPLETE:                    var wasSearchLoad:Boolean = false;                    if(_searchQueryInProgress)                    {                        wasSearchLoad = true;                        var notify:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.HIDE_NOTIFICATION);                        StageReference.instance.stage.dispatchEvent(notify);                    }                    _searchQueryInProgress = false;                    _serverQueryInProgress = false;                    var jsonData:Object = com.adobe.serialization.json.JSON.decode(e.loadedData);                    if(jsonData.status == 'success')                    {                        //trace('loadedData '+ e.loadedData);                        _parseLoadedData(e.loadedData, wasSearchLoad);                        if(wasSearchLoad)                        {                            var entriesReturned:int = int(jsonData.data.entries.length);                            LiveTrace.output('total returned = '+jsonData.data.entries.length);                            if(entriesReturned < 1)                            {                                var searchNotify:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.SHOW_NOTIFICATION);                                    searchNotify.notificationType = AppNotificationEvent.SEARCH_FAIL;                                StageReference.instance.stage.dispatchEvent(searchNotify);                            }                            else                            {                                _playerCarousel.changeVideo();                                removeInitialVideoListener();                            }                        }                        if(_total < 0)                        {                            // first data load of site                            StageReference.instance.stage.dispatchEvent(new Event('animatePreloaderOutEvent'));                            _playerCarousel.init();                        }                        else                        {                            _playerCarousel.animateIn();                        }                        _total = int(jsonData.data.total);                    }                    else                    {                        _errorCount++;                        _retryLoad();                    }                    break;                case ServerLoaderEvent.ERROR:                    _searchQueryInProgress = false;                    _serverQueryInProgress= false;                    _errorCount = MAX_ERROR_COUNT;                    _retryLoad();                    break;            }        }        private function _retryLoad():void        {            if(_errorCount <= MAX_ERROR_COUNT)            {                loadNextUserGroup();            }            else            {                _playerCarousel.allDataLoaded = true;                //_allDataIsLoaded = true;            }        }        private function _parseLoadedData(loadedData:String, wasSearchLoad:Boolean = false):void        {            var jsonData:Object = com.adobe.serialization.json.JSON.decode(loadedData);            var entriesReturned:int = int(jsonData.data.entries.length);            LiveTrace.output('total returned = '+jsonData.data.entries.length);            var i:int = 0;            var entry:Object;            var model:AppUserDataModel;            if(wasSearchLoad)            {                if(entriesReturned > 0)                {                    for(i = 0; i < entriesReturned; i++)                    {                        entry = jsonData.data.entries[i];                        model = new AppUserDataModel();                        model.id            = entry.id;                        model.userName      = entry.name;                        model.basePath      = entry.base_path;                        model.userImagePath = entry.image_path;                        model.userGifPath   = entry.gif_path;                        model.userVideoPath = entry.video_path;                        model.userOrigin    = entry.origin;                        if(i == 0)                        {                            _playerCarousel.injectUserIntoNextVideoSlot(model, 1);                        }                        else                        {                            _playerCarousel.pool.insertInQueue(model, 0);                        }                    }                }            }            else            {                if(entriesReturned < AppConsts.TOTAL_USER_LOAD)                {                    _playerCarousel.allDataLoaded = true;                }                _offset += entriesReturned;                for(i = 0; i < entriesReturned; i++)                {                    entry = jsonData.data.entries[i];                    model = new AppUserDataModel();                    model.id            = entry.id;                    model.userName      = entry.name;                    model.basePath      = entry.base_path;                    model.userImagePath = entry.image_path;                    model.userGifPath   = entry.gif_path;                    model.userVideoPath = entry.video_path;                    model.userOrigin    = entry.origin;                    _playerCarousel.pool.insertInQueue(model);                }                _playerCarousel.pool.shuffle();            }        }        private function loadNextUserGroup():void        {            if(!_searchQueryInProgress && !_serverQueryInProgress && !_playerCarousel.allDataLoaded)                _serverLoader.startLoad(XMLData.instance.config.@apibaseurl + AppConsts.userDataModelLoadUrl + _offset);            else            {//                loader will try again when it needs another video and allDataLoaded == false;//                i.e. each time a video changes            }        }        override public function animateIn():void        {            _isActive = true;            this.alpha = 1;            this.visible = true;            super.animateIn();            if(_total >= 0)            {                trace('player carousel is ready');                _playerCarousel.animateIn(false);                _playerCarousel.changeVideo();            }            else            {                LiveTrace.output('--------------------------------------- not ready for player carousel yet');            }        }        override protected function _handleNextStepClick(e:Event):void        {            trace('_handleNextStepClick');    //        super._exitEvent = AppStepEvent.NEXT_STEP_EVENT_TYPE;    //        _animateOut();            super._handleNextStepClick(e);        }        override protected function _animateInComplete():void        {        }        override protected function _animateOut():void        {            _isActive = false;            trace('_animateOut carousel step');            _playerCarousel.animateOut();            super._animateOut();            this.alpha = 0;            this.visible = false;            _animateOutComplete();        }        override protected function _animateOutComplete():void        {            trace('_animateOutComplete carousel step');            super._animateOutComplete();        }        public function get isActive():Boolean        {            return _isActive;        }        private function _handleSleepApp(e:AppStepEvent):void        {           if(isActive)           {               LiveTrace.output('sleep carousel');               _playerCarousel.pauseRotation();           }        }        private function _handleWakeApp(e:AppStepEvent):void        {            if(isActive)            {                LiveTrace.output('wake carousel');                _playerCarousel.unpauseRotation();            }        }        private function _handleInitialShowSearchEvent(e:AppStepEvent):void        {            removeInitialVideoListener();            _playerCarousel.changeVideo();        }        private function removeInitialVideoListener():void        {            StageReference.instance.stage.removeEventListener(AppStepEvent.INITIAL_VIDEO_COMPLETE, _handleInitialShowSearchEvent);        }    }}