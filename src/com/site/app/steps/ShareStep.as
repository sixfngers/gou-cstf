package com.site.app.steps{    //	imports    import com.davidcaneso.events.framework.SiteManagerEvent;    import com.davidcaneso.singletons.StageReference;    import com.davidcaneso.utils.LiveTrace;    import com.greensock.TweenMax;    import com.greensock.easing.Quad;    import com.greensock.plugins.MotionBlurPlugin;    import com.greensock.plugins.TweenPlugin;    import com.site.app.AppStep;    import com.site.app.ShareEvent;    import com.site.ui.ShareStepShareButton;    import flash.display.MovieClip;    import flash.events.Event;    import flash.events.MouseEvent;import flash.text.TextField;import flash.text.TextFieldAutoSize;TweenPlugin.activate([MotionBlurPlugin]);    public class ShareStep extends AppStep    {        //	properties        private var _content:MovieClip;        private var _twitterButton:ShareStepShareButton;        private var _facebookButton:ShareStepShareButton;        private var _googleButton:ShareStepShareButton;        private var _pintrestButton:ShareStepShareButton;        private var _tumblrButton:ShareStepShareButton;        //	constructor        public function ShareStep(devMode:Boolean):void        {            _content = new shareStageContent() as MovieClip;            _content.stepHeader.tf.autoSize = TextFieldAutoSize.LEFT;            _content.stepHeader.tf.wordWrap = false;            _content.stepHeader.tf.multiline = false;            _content.stepHeader.tf.text = "";            addChild(_content);           super(devMode);           trace('share step num children '+_content.numChildren);            _facebookButton = new ShareStepShareButton(4);            _facebookButton.x = 537;            _facebookButton.y = 142;            _facebookButton.addEventListener(Event.SELECT, _handleButtonSelect);            _content.addChild(_facebookButton);            _twitterButton = new ShareStepShareButton(1);            _twitterButton.x = 631;            _twitterButton.y = 143;            _twitterButton.addEventListener(Event.SELECT, _handleButtonSelect);            _content.addChild(_twitterButton);            _tumblrButton = new ShareStepShareButton(2);            _tumblrButton.x = 581;            _tumblrButton.y = 228;            _tumblrButton.addEventListener(Event.SELECT, _handleButtonSelect);            _content.addChild(_tumblrButton);            _googleButton = new ShareStepShareButton(3);            _googleButton.x = 484;            _googleButton.y = 231;            _googleButton.addEventListener(Event.SELECT, _handleButtonSelect);            _content.addChild(_googleButton);            _pintrestButton = new ShareStepShareButton(5);            _pintrestButton.x = 675;            _pintrestButton.y = 228;            _pintrestButton.addEventListener(Event.SELECT, _handleButtonSelect);            _content.addChild(_pintrestButton);            _content.prevStep.visible = false;//        _content.prevStep.buttonMode = true;//        _content.prevStep.mouseChildren = false;//        _content.prevStep.addEventListener(MouseEvent.ROLL_OVER, _handlePrevNextInteract);//        _content.prevStep.addEventListener(MouseEvent.ROLL_OUT, _handlePrevNextInteract);//        _content.prevStep.addEventListener(MouseEvent.CLICK, _handlePrevNextInteract);            _content.nextStep.buttonMode = false;            _content.nextStep.mouseChildren = false;            _content.nextStep.addEventListener(MouseEvent.ROLL_OVER, _handlePrevNextInteract);            _content.nextStep.addEventListener(MouseEvent.ROLL_OUT, _handlePrevNextInteract);            _content.nextStep.addEventListener(MouseEvent.CLICK, _handlePrevNextInteract);        }        private function _handleButtonSelect(e:Event):void        {            var shareEvent:ShareEvent = new ShareEvent(ShareEvent.SHARE);            switch(e.target)            {                case _twitterButton:                    shareEvent.shareType = ShareEvent.TWITTER;                    LiveTrace.output('share on twitter');                    break;                case _tumblrButton:                    shareEvent.shareType = ShareEvent.TUMBLR;                    LiveTrace.output('share on tumblr');                    break;                case _googleButton:                    shareEvent.shareType = ShareEvent.GOOGLE;                    LiveTrace.output('share on google');                    break;                case _facebookButton:                    shareEvent.shareType = ShareEvent.FACEBOOK;                    LiveTrace.output('share on facebook');                    break;                case _pintrestButton:                    shareEvent.shareType = ShareEvent.PINTREST;                    LiveTrace.output('share on pintrest');                    break;            }            dispatchEvent(shareEvent);        }        private function _handlePrevNextInteract(e:MouseEvent):void        {            var mc:MovieClip = _content.nextStep;//        if(e.target == _content.prevStep)//            mc = _content.prevStep;            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(mc.arrow,.2, {tint:0x000000, ease:Quad.easeOut});                    break;                case MouseEvent.ROLL_OUT:                    TweenMax.to(mc.arrow,.2, {removeTint:true, ease:Quad.easeOut});                    break;                case MouseEvent.CLICK:                    if(mc == _content.nextStep)                    {                        super._handleNextStepClick(null);                    }//                else//                {//                    super._handlePrevStepClick(null);//                }                    break;            }        }        override public function animateIn():void        {            this.alpha = 1;            this.visible = true;            StageReference.instance.stage.addEventListener(SiteManagerEvent.SITE_STATE_UPDATE, handleSiteStateUpdate);        }        override protected function _animateInComplete():void {}        override protected function _animateOut():void        {            StageReference.instance.stage.removeEventListener(SiteManagerEvent.SITE_STATE_UPDATE, handleSiteStateUpdate);            this.alpha = 0;            this.visible = false;            _animateOutComplete();        }        override protected function _animateOutComplete():void        {            super._animateOutComplete();        }    }}