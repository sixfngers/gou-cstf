/** * Created by ifreelance3 on 5/1/14. */package com.site.app{    import com.davidcaneso.display.drawing.SquareArea;    import com.davidcaneso.framework.ActiveSiteElement;    import com.davidcaneso.framework.DevelopmentEnvironment;    import com.davidcaneso.singletons.StageReference;    import com.davidcaneso.singletons.Styling;    import com.davidcaneso.text.DynamicTextField;    import com.davidcaneso.utils.LiveTrace;    import com.site.ui.BitmapAppTextButton;    import flash.display.MovieClip;    import flash.display.Sprite;    import flash.display.Stage;    import flash.events.Event;    import flash.events.MouseEvent;    import flash.text.TextFieldAutoSize;    [SWF(backgroundColor=0xffffff, frameRate=30, width=1024, height=768)]    public class NotificationViewer extends ActiveSiteElement    {        private var _container:Sprite;        private var _blocker:SquareArea;        private var _notificationContainer:Sprite;        private var _heading:DynamicTextField;        private var _field:DynamicTextField;        private var _trueButton:BitmapAppTextButton;        private var _falseButton:BitmapAppTextButton;        private var _loader:MovieClip;        public function NotificationViewer()        {            super();            _className = 'NotificationViewer';            _devConfigFile = '../../assets/data/siteConfig.xml';            _devSetupType		= DevelopmentEnvironment.INITIAL_EVENT_TYPES;            _devSectionNumber 	= -1;            _showTraces 		= false;            //	uncomment the _showTraces var on the line below to activate traces for this section            _showTraces = true;        }        //	private and protected methods        override protected function setup():void        {            trace('setup');            _container = new MovieClip();            _blocker = new SquareArea(100, 768);            _blocker.alpha = .8;            _blocker.mouseChildren = false;            _blocker.addEventListener(MouseEvent.ROLL_OVER, _blockerInteract);            _blocker.addEventListener(MouseEvent.ROLL_OUT, _blockerInteract);            _blocker.addEventListener(MouseEvent.CLICK, _blockerInteract);            //var bg:SquareArea = new SquareArea(notificationWidth + 20, 330, Styling.instance.findColor('white'));            //var bg:SquareOutline = new SquareOutline(notificationWidth + 20, 330, 2,2, Styling.instance.findColor('white'), Styling.instance.findColor('black'));            var bg:MovieClip = new notificationBgShape();            var notificationWidth:int = 500;            _heading = new DynamicTextField(notificationWidth, 50, Styling.instance.findFormat('notificationHeader'));            _heading.text = 'NOTIFICATION HEADER';            _heading.y = 30;            _field = new DynamicTextField(notificationWidth, 220, Styling.instance.findFormat('notificationBody'), TextFieldAutoSize.NONE);            _field.text = 'NOTIFICATION BODY';            _field.y = _heading.y + _heading.height;            var trueButtonBg:MovieClip = new notificationButtonBgShape();            var falseButtonBg:MovieClip = new notificationButtonBgShape();            _trueButton = new BitmapAppTextButton('OK', Styling.instance.findFormat('notificationButton'),trueButtonBg);            _trueButton.addEventListener(Event.SELECT, _handleNotificationResponse);            _falseButton = new BitmapAppTextButton('CANCEL', Styling.instance.findFormat('notificationButton'),falseButtonBg);            _falseButton.addEventListener(Event.SELECT, _handleNotificationResponse);            _notificationContainer = new Sprite();            _notificationContainer.addChild(bg);            _notificationContainer.addChild(_heading);            _notificationContainer.addChild(_field);            _notificationContainer.addChild(_trueButton);            _notificationContainer.addChild(_falseButton);            _loader = new notificationLoader();            _loader.x = int(_notificationContainer.width * .5);            _loader.y = int(_notificationContainer.height - 100);            _notificationContainer.addChild(_loader);            _container = new Sprite();            _container.addChild(_blocker);            _container.addChild(_notificationContainer);            _container.visible = false;            _container.alpha = 0;            addChild(_container);            handleResize();            StageReference.instance.stage.addEventListener(Event.RESIZE, handleResize);            StageReference.instance.stage.addEventListener(AppNotificationEvent.SHOW_NOTIFICATION, _handleShowNotification);            StageReference.instance.stage.addEventListener(AppNotificationEvent.HIDE_NOTIFICATION, _handleHideNotification);            trace('here');            LiveTrace.output('here '+_className);//            var testE:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.SHOW_NOTIFICATION);//            testE.notificationType = AppNotificationEvent.FORM_SUBMISSION_START;//            _handleShowNotification(testE)        }        private function _handleNotificationResponse(event:Event):void        {            var responseEvent:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.HIDE_NOTIFICATION);            switch(event.target)            {                case _trueButton:                    responseEvent.notificationType = AppNotificationEvent.TRUE_RESPONSE;                    break;                case _falseButton:                    responseEvent.notificationType = AppNotificationEvent.FALSE_RESPONSE;                    break;            }            StageReference.instance.stage.dispatchEvent(responseEvent);        }        private function _handleShowNotification(e:AppNotificationEvent):void        {            _loader.gotoAndStop(0);             switch(e.notificationType)             {                 case AppNotificationEvent.FORM_REJECT_EMPTY_NAME:                     _heading.text = 'WHOOPS!';                     _field.text = 'You forgot to name your video';                     //_field.text = 'You must check the box to verify the video is your content.';                     _showButtons(true, false, 'CLOSE');                     break;                 case AppNotificationEvent.FORM_REJECT:                     _heading.text = 'WHOOPS!';                     _field.text = 'Somethings wrong on the form';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.SUBMIT_SUCCESS:                     _heading.text = 'COMPLETE!';                     _field.text = 'Your video has been submitted!';                    _showButtons(true, false);                     break;                 case AppNotificationEvent.WEBCAM_SUBMIT_START:                 case AppNotificationEvent.FORM_SUBMISSION_START:                     _heading.text = 'BE PATIENT!';                     _field.text = 'Your video is being processed.';                     _showButtons(false, false);                     _loader.play();                     break;                 case AppNotificationEvent.WEBCAM_SUBMIT_SUCCESS:                     _heading.text = 'HOORAY!';                     _field.text = 'Your video is ready.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.WEBCAM_UNAVAILALBE:                     _heading.text = 'SORRY!';                     _field.text = 'Webcam recording is unavailable at the moment. Make sure your webcam is plugged in and turned on.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.WEBCAM_SUBMIT_FAIL:                     _heading.text = 'SORRY!';                     _field.text = 'Your video encountered and error. Try recording another one.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.VIDEO_FILE_TOO_LARGE:                     _heading.text = 'SORRY!';                     //_field.text = 'Your video file exceeds the maximum size of '+AppConsts.MAX_VIDEO_SIZE+'.';                     _field.text = 'Your video file exceeds the maximum size.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.VIDEO_UNVERIFIED:                     _heading.text = 'SORRY!';                     _field.text = 'Check the box to verify the video is your content.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.VIDEO_INVALID_FORMAT:                     _heading.text = 'SORRY!';                     _field.text = 'This video has an invalid format.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.VIDEO_NOT_FOUND:                     _heading.text = 'SORRY!';                     _field.text = 'That video could not be found.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.SEARCH_START:                     _heading.text = 'SEARCHING...';                     _field.text = 'Just a moment.';                     _showButtons(false, false);                     _loader.play();                     break;                 case AppNotificationEvent.SEARCH_FAIL:                     _heading.text = 'SORRY';                     _field.text = 'No, videos with that name could not be found.';                     _showButtons(true, false);                     break;                 case AppNotificationEvent.SEARCH_BLANK:                     _heading.text = 'SORRY';                     _field.text = 'You have to fill in the search field.';                     _showButtons(true, false);                     break;                 default:                     _heading.text = 'Good Golly!';                     _field.text = 'Please refresh. Something truly funkadelic happened.';                     // _field.text = e.notificationType;                     _showButtons(true, false);                     break;             }            _container.visible = true;            _container.alpha = 1;        }    private function _showButtons(showTrueButton:Boolean, showFalseButton:Boolean, trueText:String = 'OK', falseText:String = 'CANCEL'):void    {        _trueButton.visible = false;        _trueButton.changeText(trueText);        _falseButton.visible = false;        _falseButton.changeText(falseText);        if(showTrueButton)        {            _trueButton.visible = true;        }        if(showFalseButton)        {            _falseButton.visible = true;        }        if(showTrueButton && showFalseButton)        {            _trueButton.x = int((_notificationContainer.width - _trueButton.width) * .5) - ((_trueButton.width + 60) * .5); // - _trueButton.width) * .5) - _trueButton.width - 10;            _trueButton.y = int((_notificationContainer.height - _trueButton.height * 1.75) - 10);            _falseButton.x = int((_notificationContainer.width - _falseButton.width) * .5) + ((_falseButton.width + 60) * .5); // - _trueButton.width) * .5) - _trueButton.width - 10;            _falseButton.y = int((_notificationContainer.height - _trueButton.height * 1.75) - 10);        }        else if(showTrueButton && !showFalseButton)        {            _trueButton.x = int((_notificationContainer.width - _trueButton.width) * .5);            _trueButton.y = int((_notificationContainer.height - _trueButton.height * 1.75) - 10);        }        else        {            _falseButton.x = int((_notificationContainer.width - _falseButton.width) * .5);            _falseButton.y = int((_notificationContainer.height - _falseButton.height * 1.75) - 10);        }    }        private function _handleHideNotification(e:AppNotificationEvent):void        {            _loader.gotoAndStop(1);            var notification:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.NOTIFICATION_RESPONSE);            switch(e.notificationType)            {                case AppNotificationEvent.TRUE_RESPONSE:                case AppNotificationEvent.FALSE_RESPONSE:                    notification.notificationType = e.notificationType;                    StageReference.instance.stage.dispatchEvent(notification);                    break;            }            _container.visible = false;            _container.alpha = 0;        }        private function _blockerInteract(e:MouseEvent = null):void        {        }        private function animateIn():void        {            classTrace('hit animateIn');        }        private function handleResize(e:Event = null):void        {            var s:Stage = StageReference.instance.stage;            var w:int = s.stageWidth;            var h:int = s.stageHeight;            _blocker.width = w;            _blocker.height = h;            _notificationContainer.x = Math.round((w - _notificationContainer.width) * .5);            _notificationContainer.y = Math.round((h - _notificationContainer.height) * .5) - 10;            //_notificationContainer.y = 210;        }    }}