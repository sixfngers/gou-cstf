package com.site{    import com.davidcaneso.display.drawing.SquareArea;    import com.davidcaneso.events.framework.SiteManagerEvent;import com.davidcaneso.events.text.UserInputFieldEvent;import com.davidcaneso.framework.ActiveSiteElement;    import com.davidcaneso.framework.DevelopmentEnvironment;    import com.davidcaneso.framework.SimpleLink;    import com.davidcaneso.framework.SiteManager;    import com.davidcaneso.singletons.StageReference;    import com.davidcaneso.singletons.Styling;    import com.davidcaneso.singletons.XMLData;    import com.davidcaneso.text.UserInputField;import com.davidcaneso.utils.StringUtils;import com.greensock.*;    import com.greensock.easing.*;    import com.site.app.AppNotificationEvent;import com.site.app.AppStep;import com.site.app.AppStepEvent;    import flash.display.*;    import flash.events.*;    import flash.text.TextFieldAutoSize;    [SWF(backgroundColor=0x000000, frameRate=30, width=1024, height=768)]    public class StaticElements extends ActiveSiteElement	{		private var _container:Sprite;		private var _bg:SquareArea;		private var _ui:MovieClip;		private var _recordButton:MovieClip;		private var _learnButton:MovieClip;        private var _trailerButton:MovieClip;        private var _danceOnButton:MovieClip;        private var _searchBar:MovieClip;        private var _searchTf:UserInputField;        private var _soundButton:MovieClip;        private var _socialBar:MovieClip;		public function StaticElements()		{			_className = 'Base';			_devConfigFile = '../../assets/data/siteConfig.xml';			_devSetupType		= DevelopmentEnvironment.INITIAL_EVENT_TYPES;			_devSectionNumber 	= -1;			_showTraces 		= false;						//	uncomment the _showTraces var on the line below to activate traces for this section			_showTraces = true;		}				override public function destroy():void		{			super.destroy()		}				//	private and protected methods		override protected function setup():void		{            trace('setup');//			//_xml = XMLData.instance.sitemap.base;			_container = new MovieClip();//			var red:Number = 0xc80505;			var yellow:Number = 0xe0aa00;			_ui = new staticUI();			_recordButton = _ui.recordButton;            _recordButton.tabEnabled =false;            _recordButton.buttonMode = true;			_recordButton.mouseChildren = false;			resetButtonRollOver(_recordButton);			_recordButton.addEventListener(MouseEvent.CLICK, _handleButtonInteract);			_learnButton = _ui.learnButton;			_learnButton.tabEnabled = false;            _learnButton.buttonMode = true;			_learnButton.mouseChildren = false;			resetButtonRollOver(_learnButton);			_learnButton.addEventListener(MouseEvent.CLICK, _handleButtonInteract);////			_ui.description.record.fill.addChild(new CircularArea(79, red));//			_ui.description.learn.fill.addChild(new CircularArea(40, red));            _trailerButton = staticUI(_ui).watchTrailer;            _trailerButton.tabEnabled = false;            _trailerButton.addEventListener(MouseEvent.ROLL_OVER, _handleTrailerInteract);            _trailerButton.addEventListener(MouseEvent.ROLL_OUT, _handleTrailerInteract);            _trailerButton.addEventListener(MouseEvent.CLICK, _handleTrailerInteract);            _danceOnButton = staticUI(_ui).danceOn;            _danceOnButton.tabEnabled = false;            _danceOnButton.addEventListener(MouseEvent.ROLL_OVER, _handleDanceOnInteract);            _danceOnButton.addEventListener(MouseEvent.ROLL_OUT, _handleDanceOnInteract);            _danceOnButton.addEventListener(MouseEvent.CLICK, _handleDanceOnInteract);            _searchBar = staticUI(_ui).searchBar;            _searchBar.visible = false;            _searchBar.button.tabEnabled = true;            _searchBar.button.buttonMode = true;            _searchBar.button.mouseChildren = false;            _searchBar.button.addEventListener(MouseEvent.ROLL_OVER, _handleSearchButtonInteract);            _searchBar.button.addEventListener(MouseEvent.ROLL_OUT, _handleSearchButtonInteract);            _searchBar.button.addEventListener(MouseEvent.CLICK, _handleSearchButtonInteract);//            _searchTf = new UserInputField(304, 40, Styling.instance.findFormat('searchField'));//            _searchTf.defaultText = 'ABCDEFGHIJKLMNOPQRSTUVWXYZSEARCH VIDEOS!';//            _searchTf.changeFieldValue(_searchTf.defaultText);//            _searchTf.activateField();            _searchTf = new UserInputField(228, 35, Styling.instance.findFormat('sfield'), TextFieldAutoSize.NONE, false, 'SEARCH VIDEOS!');            _searchTf.addEventListener(UserInputFieldEvent.FOCUS_CHANGE, _handleUserInputFieldEvent);            //_searchTf.addEventListener(UserInputFieldEvent.VALUE_CHANGE, _handleUserInputFieldEvent);            _searchTf.alpha = .5;            _searchTf.multiline = false;            _searchTf.wordWrap = false;            _searchTf.x = -1;            _searchTf.y = 5;            _searchBar.addChild(_searchTf);						_searchTf.activateField(true);            //_searchTf.changeFieldValue('ABCDEFGHIJKLMNOPQRSTUVWXYZSEARCH');                        _soundButton = staticUI(_ui).soundButton;            _soundButton.tabEnabled = false;            _soundButton.buttonMode = true;            _soundButton.mouseChildren = false;            _soundButton.addEventListener(MouseEvent.ROLL_OVER, _handleSoundButtonInteract);            _soundButton.addEventListener(MouseEvent.ROLL_OUT, _handleSoundButtonInteract);            _soundButton.addEventListener(MouseEvent.CLICK, _handleSoundButtonInteract);            _socialBar = staticUI(_ui).socialBar;            _socialBar.tabChildren = false;            for(var i:int = 0; i < 5; i++)            {               var socialIcon:MovieClip = _socialBar['icon'+i];                socialIcon.buttonMode = true;                socialIcon.mouseChildren = false;                socialIcon.iconNum = i;                socialIcon.gotoAndStop(i + 1);                //XMLData.instance.config.sociallinks[i];                socialIcon.addEventListener(MouseEvent.ROLL_OVER, _handleSocialButtonInteract);                socialIcon.addEventListener(MouseEvent.ROLL_OUT, _handleSocialButtonInteract);                socialIcon.addEventListener(MouseEvent.CLICK, _handleSocialButtonInteract);            }//			_container = new Sprite();			_container.addChild(_ui);			addChild(_container);						if(!_dev)            {                handleResize();			    StageReference.instance.stage.addEventListener(Event.RESIZE, handleResize)            }            StageReference.instance.stage.addEventListener(AppStepEvent.SOUND_MUTED, _updateSoundButtonVisuals);            StageReference.instance.stage.addEventListener(AppStepEvent.SOUND_UNMUTED, _updateSoundButtonVisuals);            StageReference.instance.stage.addEventListener(AppStepEvent.HIDE_SEARCH, _hideSearchBar);            StageReference.instance.stage.addEventListener(AppStepEvent.SHOW_SEARCH, _showSearchBar);		}        private function _handleUserInputFieldEvent(e:UserInputFieldEvent):void        {            switch(e.type)            {                case UserInputFieldEvent.FOCUS_CHANGE:                    if(_searchTf.inFocus)                    {                        _searchTf.clearField();                    }                    else                    {                        if(_searchTf.isBlank())                            _searchTf.changeFieldValue(_searchTf.defaultText);                    }                    break;            }        }        private function _handleSocialButtonInteract(e:MouseEvent):void        {            var mc:MovieClip = e.target as MovieClip;            var num:int = mc['iconNum'];            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(mc,.3, {tint:Styling.instance.findColor('red'), ease:Quad.easeOut});                    break;                case MouseEvent.ROLL_OUT:                    TweenMax.to(mc,.3, {removeTint:Styling.instance.findColor('yellow'), ease:Quad.easeOut});                    break;                case MouseEvent.CLICK:                    SimpleLink.linkOut(XMLData.instance.config.sociallinks.link.@url[num]);                    break;            }        }        private function _updateSoundButtonVisuals(e:AppStepEvent):void        {            if(e.type == AppStepEvent.SOUND_MUTED)            {                _soundButton.gotoAndStop(2);                //_soundButton.icon.gotoAndStop(2);                TweenMax.to(_soundButton.icon.masking,.2, {y:19, ease:Quad.easeOut});                _soundButton.icon.bars.stop();                _soundButton.tf.gotoAndStop(2);            }            else            {                _soundButton.gotoAndStop(1);                //_soundButton.icon.gotoAndStop(1);                TweenMax.to(_soundButton.icon.masking,.2, {y:3, ease:Quad.easeOut});                _soundButton.icon.bars.play();                _soundButton.tf.gotoAndStop(1);            }        }        private function _handleSoundButtonInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(_soundButton.icon,.3, {tint:Styling.instance.findColor('off-white'), ease:Quad.easeOut});                    TweenMax.to(_soundButton.tf,.3, {tint:Styling.instance.findColor('off-white'), ease:Quad.easeOut});                    break;                case MouseEvent.ROLL_OUT:                    TweenMax.to(_soundButton.icon,.3, {removeTint:true, ease:Quad.easeOut});                    TweenMax.to(_soundButton.tf,.3, {removeTint:true, ease:Quad.easeOut});                    break;                case MouseEvent.CLICK:                    var appEvent:AppStepEvent= new AppStepEvent(AppStepEvent.SOUND_TOGGLE);                    StageReference.instance.stage.dispatchEvent(appEvent);                    break;            }        }        private function _hideSearchBar(e:AppStepEvent):void        {            _searchBar.visible = false;        }        private function _showSearchBar(e:AppStepEvent):void        {            _searchBar.visible = true;        }        private function _handleSearchButtonInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(_searchBar.button.icon,.3, {tint:Styling.instance.findColor('off-white'), ease:Quad.easeOut});                    break;                case MouseEvent.ROLL_OUT:                    TweenMax.to(_searchBar.button.icon,.3, {removeTint:true, ease:Quad.easeOut});                    break;                case MouseEvent.CLICK:                    // do search                    if(_searchTf.isBlank())                    {                        var notify:AppNotificationEvent = new AppNotificationEvent(AppNotificationEvent.SHOW_NOTIFICATION);                        notify.notificationType = AppNotificationEvent.SEARCH_BLANK;                        StageReference.instance.stage.dispatchEvent(notify);                    }                    else                    {                        var searchText:String = _searchTf.text;                        searchText = StringUtils.removeLeadingSpaces(searchText);                        searchText = StringUtils.removeTrailingSpaces(searchText);                        var searchEvent:AppStepEvent = new AppStepEvent(AppStepEvent.SEARCH_FOR_VIDEO);                            searchEvent.param = searchText;                        StageReference.instance.stage.dispatchEvent(searchEvent);                        _searchTf.changeFieldValue(_searchTf.defaultText);                    }                    break;            }        }        private function _handleDanceOnInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    break;                case MouseEvent.ROLL_OUT:                    break;                case MouseEvent.CLICK:                    SimpleLink.linkOut('https://www.youtube.com/user/DanceOn/videos');                    break;            }        }        private function _handleTrailerInteract(e:MouseEvent):void        {            switch(e.type)            {                case MouseEvent.ROLL_OVER:                    TweenMax.to(_trailerButton.icon,.2, {tint:Styling.instance.findColor('off-white')});                    break;                case MouseEvent.ROLL_OUT:                    TweenMax.to(_trailerButton.icon,.2, {removeTint:true});                    break;                case MouseEvent.CLICK:                    SimpleLink.linkOut('http://www.getonupmovie.com/post/79573996508');                    break;            }        }				private function _handleButtonInteract(e:MouseEvent = null):void		{			var target:MovieClip = MovieClip(e.target);			switch(e.type)			{				case MouseEvent.ROLL_OVER:					killButtonRollOver(target);					if(target == _recordButton)					{//						TweenMax.to(target.outer, .2, {scaleX:1.1, scaleY:1.1, ease:Back.easeOut, yoyo:true, repeat:1, delay:.1});//						TweenMax.to(target.fill, .2, {scaleX:1.05, scaleY:1.05, ease:Back.easeOut, yoyo:true, repeat:1, delay:.15});//						TweenMax.to(target.icon, .2, {scaleX:.9,scaleY:.9, ease:Back.easeIn, yoyo:true, repeat:1, delay:0});					}						//					TweenMax.to(target.fill, .2, {scaleX:1.05, scaleY:1.05, ease:Back.easeOut, yoyo:true, repeat:1, delay:.15, onComplete:resetButtonRollOver, onCompleteParams:[target]});//					TweenMax.to(target.icon, .2, {scaleX:.9,scaleY:.9, ease:Back.easeIn, yoyo:true, repeat:1, delay:0});					break;								case MouseEvent.CLICK:					if(e.target == _recordButton)                    {                        trace('record button');                        // move to next step                        StageReference.instance.stage.dispatchEvent(new AppStepEvent(AppStepEvent.START_APP));                    }					else if(e.target == _learnButton)                    {                        trace('learn button');                        // show global video player                        StageReference.instance.stage.dispatchEvent(new AppStepEvent(AppStepEvent.LEARN_MOVES));                    }					break;			}		}				private function killButtonRollOver(target:MovieClip):void		{			target.removeEventListener(MouseEvent.ROLL_OVER, _handleButtonInteract);			target.removeEventListener(MouseEvent.ROLL_OUT, _handleButtonInteract);		}				private function resetButtonRollOver(target:MovieClip):void		{			target.addEventListener(MouseEvent.ROLL_OVER, _handleButtonInteract);			target.addEventListener(MouseEvent.ROLL_OUT, _handleButtonInteract);		}						override protected function handleSiteStateUpdate(e:SiteManagerEvent):void		{			switch(e.siteState){				case SiteManager.INITIAL_ANIMATION_STATE:					animateIn();					break;					case SiteManager.SLEEP_STATE:					sleep();					break;					case SiteManager.WAKE_STATE:					wake();					break;			}		}						private function animateIn():void		{			classTrace('hit animateIn');		}				private function animateInComplete():void		{			classTrace('animateInComplete');			//stage.dispatchEvent(new SiteManagerEvent(SiteManagerEvent.INITIAL_ANIMATION_COMPLETE, _top.siteState, _top.activeSectionNumber, _top.nextSectionNumber))		}		protected override function sleep():void		{			classTrace('hit sleep');		}				protected override function wake():void		{			classTrace('hit wake');		}				private function handleResize(e:Event = null):void		{            var s:Stage = StageReference.instance.stage;            var w:int = s.stageWidth;						_container.x = int((w - 1024) * .5);		}	}	}