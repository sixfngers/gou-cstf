package com.site{    import com.adobe.images.PNGEncoder;    import flash.display.Bitmap;    import flash.events.TimerEvent;    import flash.utils.ByteArray;    import flash.utils.Timer;    import nochump.util.zip.ZipEntry;    import nochump.util.zip.ZipOutput;    public class AppUserVideoImageSequence	{		private var _imageSequence:Array;        private var _imageSequenceZip:ZipOutput;        public function AppUserVideoImageSequence():void		{			reset();        }        public function reset():void        {            _imageSequence = [];            _imageSequenceZip = null;        }        public function get imageSequence():Array        {            return _imageSequence;        }        public function get zipFileByteArray():ByteArray        {            return _imageSequenceZip.byteArray;        }        public function addFileToSequence(val:ByteArray):void        {            _imageSequence.push(val);        }        public function compressImagesIntoZip():void        {            _imageSequenceZip = new ZipOutput();            _createZip();        }        private function _createZip():void        {            //new            //	filename arbitrary and can be anything you want            //	the php will use fileName and append an underscore and the index number on the end of the file as well as the .png extension            var iLimit:int = _imageSequence.length;            for(var i:int = 0; i<iLimit; i++)            {                var fileName:String = AppUser.userVideoPath+"_"+_makePaddedNumberFrom(i, 3)+'.png';                var entry:ZipEntry = new ZipEntry(fileName);                _imageSequenceZip.putNextEntry(entry);                _imageSequenceZip.write( _imageSequence[i] );                _imageSequenceZip.closeEntry();            }            _imageSequenceZip.finish();        }        private function _makePaddedNumberFrom(number:int, width:int):String        {            var ret:String = ""+number;            while( ret.length < width )                ret="0" + ret;            return ret;        }    }}