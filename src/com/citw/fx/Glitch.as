package com.citw.fx {	import com.greensock.TweenMax	import com.greensock.easing.*			import com.watsondg.display.effects.Banding			import flash.utils.ByteArray;	import flash.display.BitmapData;	import flash.events.Event	import flash.display.Bitmap;	import flash.geom.Rectangle;	import flash.geom.Point;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import com.greensock.*;		public class Glitch extends MovieClip{		public function Glitch(image) {			imageBmpData = new BitmapData(image.width, image.height, true, 0)			imageBmpData.draw(image)			b = new Banding(imageBmpData)			b.glitchiness = .6			b.seed = 1			b.maxIterations = 30						addChild(b)			addEventListener(Event.ENTER_FRAME, update)			b.addEventListener(Event.CHANGE, display);						TweenMax.delayedCall(0.5, destroy);		}				private var imageBmpData:BitmapData		private var b:Banding;		private var glitchChange:Number = .2		private var seedChange:Number = 1		private var maxIterationChange:int = 1				function destroy() {			removeEventListener(Event.ENTER_FRAME, update)			b.removeEventListener(Event.CHANGE, display);			imageBmpData.dispose();			MovieClip(parent).removeChild(this);		}		function update(e):void		{			//			b.glitchiness += glitchChange			//			if(b.glitchiness <= 0 || b.glitchiness >= 1) glitchChange *= -1						//			b.seed += seedChange			//			if(b.seed <= 0 || b.seed >= 10) seedChange *= -1						//			b.maxIterations += maxIterationChange			//			if(b.maxIterations <= 0 || b.maxIterations >= 100) maxIterationChange *= -1						b.draw()			}		function display(e:Event):void		{			var bitmap:Bitmap = new Bitmap(b.bitmapData, 'auto', true)			var rand:int = Math.random() * 100			var colorAdjust:Boolean = false			if(rand < 90) colorAdjust = true			if(rand > 30 && rand < 42) colorAdjust = true			if(rand > 70 && rand < 90) colorAdjust = true						if(colorAdjust)	TweenMax.to(bitmap, 0, {colorMatrixFilter:{saturation:0}});						addChild(bitmap)		}	}	}