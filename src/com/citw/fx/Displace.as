package com.citw.fx {		import flash.display.Shape;	import flash.geom.Rectangle;	import flash.geom.Point;	import flash.display.BitmapData;	import flash.filters.BlurFilter;	import flash.display.Bitmap;		public class Displace {		public function Displace() {			// constructor code		}				public static function getMap(rect, lines=3) {			var shape = new Shape();						shape.graphics.beginFill(0x808080);			shape.graphics.lineTo(rect.width, 0);			shape.graphics.lineTo(rect.width, rect.height);			shape.graphics.lineTo(0, rect.height);			shape.graphics.endFill();						var blockRect = new Rectangle(0, 0, rect.width*0.85, rect.height/(lines*2));					var spacing = new Point(0, rect.height/(lines+1));						for(var i=0; i<lines; i++) {				var start = new Point((rect.width-blockRect.width)*0.5, spacing.y*(i+1)-blockRect.height*0.5);				shape.graphics.beginFill(0xFFFFFF);				shape.graphics.drawRoundRect(start.x, start.y, blockRect.width, blockRect.height, blockRect.height);				shape.graphics.endFill();			}						var multiColoredLines = new Shape();			var colors = [0x3d3d3d, 0x808080, 0xc2c2c2];			for(i=0; i<rect.height; i++) {				multiColoredLines.graphics.beginFill(colors[Math.floor(Math.random()*colors.length)]);				multiColoredLines.graphics.drawRect(0, i, rect.width, 1);				multiColoredLines.graphics.endFill();								i += Math.round(Math.random()*(rect.height*0.0125));			}						var bmd = new BitmapData(rect.width, rect.height, false);			bmd.draw(shape);						var blurAmp = rect.height*0.075;			var blur = new BlurFilter(blurAmp, blurAmp, 3);			bmd.applyFilter(bmd, rect, new Point(0, 0), blur);			var bm = new Bitmap(bmd);						bmd.draw(multiColoredLines);						return bm;		}	}	}