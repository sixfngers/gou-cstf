package com.citw.fx {	import flash.display.Bitmap;	import flash.display.BitmapData;	import com.greensock.*;	import com.greensock.easing.*;	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.BitmapDataChannel;	import flash.geom.Rectangle;	import flash.geom.Point;		public class PerlinMask extends MovieClip {		public function PerlinMask(obj) {			// constructor code						scale = .25;			target = obj;						rect = new Rectangle(0, 0, target.width, target.height);			rect.width *= scale;			rect.height *= scale;			bmd = new BitmapData(rect.width, rect.height);						cursorX = 0;			cursorY = 0;			speed = (rect.width*0.025)*scale;			//speed = 4*scale;						seed = Math.floor(Math.random() * 10);			channels = BitmapDataChannel.RED | BitmapDataChannel.BLUE;						maskBMD = new BitmapData(rect.width, rect.height);			bm = new Bitmap(maskBMD);			self = this;						container = new MovieClip();			addChild(container);			container.addChild(bm);						container.cacheAsBitmap = target.cacheAsBitmap = true;			target.mask = container;						bm.scaleX = bm.scaleY = 1/scale;						TweenMax.to(bm, 0, {blurFilter:{blurX:40, blurY:40}});						threshold = 0x9c9c9c;						TweenMax.to(this, 3, {cursorX:speed*60, cursorY:speed*60, ease:Quint.easeOut});			TweenMax.to(this, 5, {threshold:0, ease:Quad.easeInOut, onUpdate:enterFrameHandler});						//addEventListener(Event.ENTER_FRAME, enterFrameHandler);			addEventListener(Event.REMOVED_FROM_STAGE, removedFromStageHandler);		}				var scale;		var target;		var rect;		var bmd:BitmapData;				public var cursorX;		public var cursorY;		public var threshold:uint =  0x00800000; 		var speed;				var seed:Number;		var channels:uint;				var maskBMD;		var bm:Bitmap;		var self;				var container;				function removedFromStageHandler(e=null) {			removeEventListener(Event.REMOVED_FROM_STAGE, removedFromStageHandler);			kill();		}		public function kill() {			removeEventListener(Event.ENTER_FRAME, enterFrameHandler);		}		private function enterFrameHandler(e:Event=null) {			var offsets = new Array();			offsets[0] = new Point(cursorX, cursorY);						bmd.lock();						bmd.fillRect(rect, 0xFFFFFF);			maskBMD.fillRect(rect, 0xFFFFFF);						var amp = rect.width/2;						bmd.perlinNoise(amp, amp, 2, seed, false, true, channels, true, offsets);			bmd.unlock();			//cursorX += speed;			//cursorY += speed;						var bmd2:BitmapData = new BitmapData(rect.width, rect.height);			//alpha threshold			//var color:uint = 0x20FF0000;			var color:uint = 0x00FF0000;			var maskColor:uint = 0x00FF0000;			bmd2.threshold(bmd, rect, new Point(rect.x, rect.y), ">", threshold, color, maskColor, true);						maskBMD.copyChannel(bmd2, new Rectangle(0, 0, rect.width, rect.height), new Point(rect.x, rect.y), BitmapDataChannel.RED, BitmapDataChannel.ALPHA);		}	}	}